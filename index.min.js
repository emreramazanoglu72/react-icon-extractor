const fs=require("fs"),readline=require("readline"),colors=require("colors"),path=require("path"),{createElement:s}=require("react"),{exec:c}=require("child_process"),{renderToStaticMarkup:e}=require("react-dom/server"),aiIcons=require("react-icons/ai"),bsIcons=require("react-icons/bs"),cgIcons=require("react-icons/cg"),diIcons=require("react-icons/di"),faIcons=require("react-icons/fa"),fcIcons=require("react-icons/fc"),fiIcons=require("react-icons/fi"),giIcons=require("react-icons/gi"),goIcons=require("react-icons/go"),grIcons=require("react-icons/gr"),hiIcons=require("react-icons/hi"),imIcons=require("react-icons/im"),ioIcons=require("react-icons/io"),mdIcons=require("react-icons/md"),riIcons=require("react-icons/ri"),siIcons=require("react-icons/si"),tiIcons=require("react-icons/ti"),projectDir="./src",ICON_COMPONENT_REGEX=/import\s*\{\s*([\w\s{},]*)\s*\}\s*from\s*['"]react-icons\/([\w-]+)['"]\s*;?/g;function getIconSvg(c){let o=c.charAt(0).toUpperCase()+c.slice(1),i;if(aiIcons[o])i=aiIcons[o];else if(bsIcons[o])i=bsIcons[o];else if(cgIcons[o])i=cgIcons[o];else if(diIcons[o])i=diIcons[o];else if(faIcons[o])i=faIcons[o];else if(fcIcons[o])i=fcIcons[o];else if(fiIcons[o])i=fiIcons[o];else if(giIcons[o])i=giIcons[o];else if(goIcons[o])i=goIcons[o];else if(grIcons[o])i=grIcons[o];else if(hiIcons[o])i=hiIcons[o];else if(imIcons[o])i=imIcons[o];else if(ioIcons[o])i=ioIcons[o];else if(mdIcons[o])i=mdIcons[o];else if(riIcons[o])i=riIcons[o];else if(siIcons[o])i=siIcons[o];else if(tiIcons[o])i=tiIcons[o];else throw Error(`Icon ${c} not found`);let n=e(s(i)),t=path.join(__dirname,"public/assets","icons");fs.existsSync(t)||fs.mkdirSync(t,{recursive:!0});let r=c.substr(0,2),a=`${c}.svg`,l=path.join(t,r,a);return fs.existsSync(path.join(t,r))||fs.mkdirSync(path.join(t,r)),fs.writeFileSync(l,n),n}const getIconMappings=()=>{let s=new Map,c=e=>{let o=fs.readdirSync(e);for(let i of o){let n=path.join(e,i);if(fs.statSync(n).isDirectory())c(n);else if([".js",".jsx",".ts",".tsx"].includes(path.extname(n))){let t=fs.readFileSync(n,"utf-8"),r;for(;r=ICON_COMPONENT_REGEX.exec(t);){let[a,l,I]=r,f=path.join("assets","icons",`${I}.svg`);s.set(l.split(/,\s*/),{iconName:I,iconPath:f})}}}};return c(projectDir),s},replaceIconsInFile=(s,c)=>{let e=fs.readFileSync(s,"utf-8");for(let[o,{iconName:i,iconPath:n}]of c.entries())o.forEach(s=>{getIconSvg(s=s.trim()),e=e.replace(RegExp(`(<${s}\\s*)(.*?)\\/>|(<${s}\\s+)(.*?)\\/>`,"g"),`<img src="/assets/icons/${s.substr(0,2)}/${s}.svg" $2$4/>`)});var t=e.replace(ICON_COMPONENT_REGEX,"");fs.writeFileSync(s,t)},copyIcons=()=>{let s=getIconMappings(),c=e=>{let o=fs.readdirSync(e);for(let i of o){let n=path.join(e,i);fs.statSync(n).isDirectory()?c(n):[".js",".jsx",".ts",".tsx"].includes(path.extname(n))&&replaceIconsInFile(n,s)}};c(projectDir),process.argv[2]},removeReactIconsPackage=()=>{c("npm remove react-icons")},main=()=>{console.log(colors.green("Welcome to React Icon Optimizer!")),console.log(colors.yellow("React Icon Optimizer allows you to reduce the build size by deleting unused icons in the React Icons library used in React projects.")),console.log(colors.blue("What action would you like to do?")),console.log(colors.cyan("1. Copy only used icons")),console.log(colors.cyan("2. Remove React Icons library and copy used icons")),console.log(colors.red("3. Exit"));let s=readline.createInterface({input:process.stdin,output:process.stdout});s.question("your choice : ",async c=>{switch(c){case"1":console.log(colors.blue("Only icons will be copied...")),await copyIcons(),console.log(colors.green("Icons copied."));break;case"2":console.log(colors.blue("React-icons library will be removed and icons will be copied...")),await removeReactIconsPackage(),await copyIcons(),console.log(colors.green("Removed the react-icons library and copied the icons."));break;case"3":console.log(colors.red("The application is closing.")),process.exit(0);break;default:console.log(colors.red("Invalid selection."))}s.close()})};main();